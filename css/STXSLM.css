body {
    /* background-image: url("background_first_Tab.png");
    background-image: url("main.png");
    background-image: url("grass.png"); */

    text-align: center;
    font-size: 100px;
    padding-top: 20%;

    background-repeat: repeat;
    background-position: center;
    background-attachment: fixed;
    /* 可根据页面需求调整 */
}




/* 新增：打字效果文本块 */
/* 修改：打字效果块位置，确保文字打字完成后停止在页面中部（水平方向居中，垂直方向40%处） */
.typing-box {
    position: fixed;
    top: 35%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

/* 调整与下方 STXSLM 块的间距 */










/* 原有打字效果（初始文本） */
.typing-text {
    display: inline-block;
    font-size: 36px;
    /* 可根据需要调整文字大小 */
    color: #000000;
    /* 文字颜色 */
    white-space: nowrap;
    overflow: hidden;
    border-right: 2px solid #fff;
    /* 模拟光标 */
    text-align: right;
    /* 初始状态下不直接定义 animation，下面通过类来控制 */
}

/* 初始文本打字动画，字符数为27（请根据实际文字字符数调整 steps 数值） */
.typing-animation {
    animation: typing 4s steps(27) forwards, blink 0.75s step-end infinite;
}

/* 删除动画（将文本从宽度100%收回到0），同样使用 steps(27) */
.deleting {
    animation: deleting 4s steps(27) forwards, blink 0.75s step-end infinite;
}

/* 新文本打字动画，字符数为13（请根据实际新文字字符数调整 steps 数值） */
.newtyping {
    animation: typing 4s steps(13) forwards, blink 0.75s step-end infinite;
}

@keyframes typing {
    from {
        width: 0;
    }

    to {
        width: 100%;
    }
}

@keyframes deleting {
    from {
        width: 100%;
    }

    to {
        width: 0;
    }
}

@keyframes blink {

    from,
    to {
        border-color: transparent;
    }

    50% {
        border-color: #fff;
    }
}
















/* .typing-text {
    display: inline-block;
    font-size: 36px;
    可根据需要调整文字大小
    color: #000000;
    文字颜色
    white-space: nowrap;
    overflow: hidden;
    border-right: 2px solid #fff;
    模拟光标
    text-align: right;
    实现从右往左的打字效果
    动画：根据文字字符数设置 steps(11)
    animation: typing 4s steps(27) forwards, blink 0.75s step-end infinite;
}

@keyframes typing {
    from {
        width: 0;
    }

    to {
        width: 100%;
    }
}

@keyframes blink {

    from,
    to {
        border-color: transparent;
    }

    50% {
        border-color: #fff;
    }
} */















/* 新增：背景切换容器 */
.bg-slider {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    /* 保证背景在所有内容后面 */
    overflow: hidden;
}

/* 每个背景图层 */
.bg-slider div {
    position: absolute;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    opacity: 0;
    animation: bgCycle 30s infinite;
}

/* 第一张背景图：延迟 0 秒 */
.bg-slider div:nth-child(1) {
    background-image: url("../Photo01/background_first_Tab.png");
    animation-delay: 0s;
}

/* 第二张背景图：延迟 10 秒 */
.bg-slider div:nth-child(2) {
    background-image: url("../Photo01/main.png");
    animation-delay: 10s;
}

/* 第三张背景图：延迟 20 秒 */
.bg-slider div:nth-child(3) {
    background-image: url("../Photo01/grass.png");
    animation-delay: 20s;
}

/* 背景动画：整个周期 30 秒，每 10 秒一张图，淡入淡出效果 */
@keyframes bgCycle {
    0% {
        opacity: 0;
    }

    10% {
        opacity: 1;
    }

    33% {
        opacity: 1;
    }

    43% {
        opacity: 0;
    }

    100% {
        opacity: 0;
    }
}











/* 为字母添加自由落体及反弹动效 */
.letter {
    display: inline-block;
    /* 动画 3s 完成并保持最终状态 */
    animation: dropBounce 3s ease-out forwards;
}

@keyframes dropBounce {
    0% {
        transform: translateY(-150vh);
    }

    60% {
        transform: translateY(0);
    }

    70% {
        transform: translateY(-20px);
    }

    80% {
        transform: translateY(0);
    }

    90% {
        transform: translateY(-10px);
    }

    100% {
        transform: translateY(0);
    }
}

/* 确保外层容器为相对定位 */
.stxslm-wrapper {
    position: relative;
    display: inline-block;

    /*  */
}


/* 为两个 span 块设置透明背景和透明边框 */
.group {
    background-color: transparent;
    border: 1px solid transparent;
    display: inline-block;
    transition: transform 0.7s ease 0.7s;
}

/* 为 group-left 内的字母设置颜色（保持原顺序：S 红、T 橙、X 黄） */
.group-left .letter:nth-child(1) {
    color: red;
}

.group-left .letter:nth-child(2) {
    color: orange;
}

.group-left .letter:nth-child(3) {
    color: yellow;
}

/* 为 group-right 内的字母设置颜色（保持原顺序：S 绿、L 蓝、M 紫） */
.group-right .letter:nth-child(1) {
    color: green;
}

.group-right .letter:nth-child(2) {
    color: blue;
}

.group-right .letter:nth-child(3) {
    color: purple;
}

/* 当鼠标悬停在容器上时，同时使左右两个组别向两侧移动 */
.stxslm-wrapper:hover .group-left {
    transform: translateX(-100px);
}

.stxslm-wrapper:hover .group-right {
    transform: translateX(100px);
}


/* 按钮样式 */
.secret-btn {

    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
    /* 初始隐藏 */
    transition: opacity 0.7s ease 0.7s;
    /* 延迟0.5秒后（盒子移动完毕）逐渐显现 */
    padding: 15px 25px;
    font-size: 24px;
    border: none;
    border-radius: 10px;
    background-color: white;
    color: black;
    cursor: pointer;
}

/* 悬停整个区域时显示按钮 */
.stxslm-wrapper:hover .secret-btn {
    opacity: 1;
}

/* 鼠标悬停按钮时背景由白色变为浅紫色 */
.secret-btn:hover {
    background-color: #dda0dd;
}


/* 鼠标悬停时取消盒子还原的延迟，让它们立即移动 */
.stxslm-wrapper:hover .group {
    transition-delay: 0s;
}

/* 当鼠标离开时，让按钮无延迟消失 */
.stxslm-wrapper:not(:hover) .secret-btn {
    transition-delay: 0s;
}